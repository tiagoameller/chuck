#user_form.modal data-backdrop="true" data-focus="true"
  = simple_form_for [:admin, @user], remote: true, validate: true do |f|
    .modal-dialog.modal-lg
      .modal-content
        .modal-body
          - present(@user) do |user|
            div class="card card-accent-#{class_by_action} mb-0"
              .card-header
                h3.card-title
                  = icon_by_model(:user)
                  =< User.model_name.human(count: 1)
                  - if updating?
                      p
                        = user.full_name
                  == render 'partials/dismiss_modal'
              .card-body
                - if creating?
                  = f.input :name
                - else
                  = f.input :username
                  = f.input :name
                = f.input :phone, hint: t('registrations.edit.hints.optional_phone')
                = f.input :email, hint: t('registrations.edit.hints.optional_email')
                .mb-2
                  = f.input :dark_theme, wrapper: :custom_checkbox
                  small.text-muted = t('user.hints.dark_theme')
                / there must be at least one admin for company.
                - if policy(:user).edit_role?
                  - if user.default_admin?
                    .form-group
                      .form-control-label.capitalize-first-word
                        = t 'attributes.role'
                      .form-text
                        = user.role_i18n
                      small.form_text.text-muted
                        = t 'user.cannot_delete_default_admin'
                  - else
                    = f.input(:role, {collection: User.roles.keys.delete_if{|r| r == 'super_admin'}, include_blank: false})
                  .mb-2
                    = f.input(:active, as: :boolean, label: t('attributes.active'), wrapper: :custom_checkbox) unless user.at_least_admin?
                    small.text-muted = t('user.hints.active') unless user.at_least_admin?

                - if policy(:user).edit_passwords? && updating?
                    = render partial: 'partials/passwords', locals: { form: f }
                = f.input :comment
                - if creating?
                    = render partial: 'partials/passwords', locals: { form: f }
            .card-footer
              = f.submit(class: "btn btn-#{creating? ? 'success' : 'warning'} validable_form_submit", data: { disable_with: t('common.saving') })
              == render 'form_footer_buttons'
